[["C:\\Users\\Usuario\\Desktop\\programacion\\learn_node_typescript\\mentoring\\tests\\contexts\\proyects\\proyect\\application\\ProyectCreator.test.ts",{"fileContent":"import { ProyectCreator } from '../../../../../src/contexts/proyects/proyect/application/ProyectCreator';\nimport { TechnologyMapper } from '../../../../../src/contexts/proyects/proyect/application/TechnologyMapper';\nimport { TechnologyCommand } from '../../../../../src/contexts/proyects/proyect/application/TechnologyCommand';\nimport { ProyectRepository } from '../../../../../src/contexts/proyects/proyect/domain/ProyectRepository';\nimport { Technology } from '../../../../../src/contexts/proyects/proyect/domain/Technology';\nimport { Proyect } from '../../../../../src/contexts/proyects/proyect/domain/Proyect';\ndescribe('ProyectCreator', () => {\n    it('should create a valid proyect', async () => {\n\n        const repository: ProyectRepository = {\n            save: jest.fn()\n        };\n        const creator = new ProyectCreator(repository);\n        const id = \"id\";\n        const name = \"proyect1\";\n        const category = \"social sector\";\n        const description = \"application for help older people to deal with loneliness\";\n        const tags = [\"health care\", \"older people\"];\n        const technologies = {\n            frontEnd: [\"angular\", \"scss\"],\n            back_end: [\"Java\", \"Spring\"],\n            data_science: [\"Python\"]\n        };\n        const experienceLevel= 1;\n        const team = ['']\n        const technologyCommand:TechnologyCommand =  TechnologyMapper.toCommand(technologies.frontEnd, technologies.back_end, technologies.data_science);\n        const expectedTechnology = new Technology(technologies.frontEnd, technologies.back_end, technologies.data_science);\n        const expectedProyect = new Proyect(id, name, category, description, tags, expectedTechnology,  experienceLevel, team);\n        \n      \n        await creator.run(id, name, category, description, tags, technologyCommand, experienceLevel, team);\n\n        expect(repository.save).toHaveBeenCalledWith(expectedProyect)\n    })\n})","resolvedModuleNames":["C:/Users/Usuario/Desktop/programacion/learn_node_typescript/mentoring/src/contexts/proyects/proyect/application/ProyectCreator.ts","C:/Users/Usuario/Desktop/programacion/learn_node_typescript/mentoring/src/contexts/proyects/proyect/application/TechnologyMapper.ts","C:/Users/Usuario/Desktop/programacion/learn_node_typescript/mentoring/src/contexts/proyects/proyect/application/TechnologyCommand.ts","C:/Users/Usuario/Desktop/programacion/learn_node_typescript/mentoring/src/contexts/proyects/proyect/domain/ProyectRepository.ts","C:/Users/Usuario/Desktop/programacion/learn_node_typescript/mentoring/src/contexts/proyects/proyect/domain/Technology.ts","C:/Users/Usuario/Desktop/programacion/learn_node_typescript/mentoring/src/contexts/proyects/proyect/domain/Proyect.ts"]}],["C:\\Users\\Usuario\\Desktop\\programacion\\learn_node_typescript\\mentoring\\src\\contexts\\proyects\\proyect\\application\\ProyectCreator.ts",{"fileContent":"import { TechnologyCommand } from './TechnologyCommand';\nimport { ProyectRepository } from '../domain/ProyectRepository';\nimport { Proyect } from '../domain/Proyect';\nimport { Technology } from '../domain/Technology';\nexport class ProyectCreator {\n    constructor(private repository: ProyectRepository){}\n\n    async run(id: string, name:string, category: string, description:string, tags:string[], technologies: TechnologyCommand, experienceLevel:number, team:string[]){\n        const technology: Technology = new Technology(technologies.getFrontEnd(), technologies.getBackend(), technologies.getDataScience());\n        const course = new Proyect(id, name,category,description,tags, technology, experienceLevel,team);\n        return this.repository.save(course);\n    }\n}","resolvedModuleNames":["C:/Users/Usuario/Desktop/programacion/learn_node_typescript/mentoring/src/contexts/proyects/proyect/application/TechnologyCommand.ts","C:/Users/Usuario/Desktop/programacion/learn_node_typescript/mentoring/src/contexts/proyects/proyect/domain/ProyectRepository.ts","C:/Users/Usuario/Desktop/programacion/learn_node_typescript/mentoring/src/contexts/proyects/proyect/domain/Proyect.ts","C:/Users/Usuario/Desktop/programacion/learn_node_typescript/mentoring/src/contexts/proyects/proyect/domain/Technology.ts"]}],["C:\\Users\\Usuario\\Desktop\\programacion\\learn_node_typescript\\mentoring\\src\\contexts\\proyects\\proyect\\domain\\Proyect.ts",{"fileContent":"import { Technology } from './Technology';\nexport class Proyect{\n    readonly id:string;\n    readonly name: string;\n    readonly category: string;\n    readonly description: string;\n    readonly tags: string[];\n    readonly tecnoogies: Technology;\n    readonly experienceLevel: number;\n    readonly team: string[];\n\n\n    public constructor(id:string, name:string, category:string,\n         description:string, tags:string[], tecnologies: Technology, experienceLevel:number, team:string[] ){\n            this.id = id;\n            this.name = name;\n            this.category =category;\n            this.description = description;\n            this.tecnoogies = tecnologies;\n            this.tags = tags;\n            this.experienceLevel =experienceLevel;\n            this.team = team;\n         }\n\n}\n\n\n","resolvedModuleNames":["C:/Users/Usuario/Desktop/programacion/learn_node_typescript/mentoring/src/contexts/proyects/proyect/domain/Technology.ts"]}],["C:\\Users\\Usuario\\Desktop\\programacion\\learn_node_typescript\\mentoring\\src\\contexts\\proyects\\proyect\\domain\\Technology.ts",{"fileContent":"export class Technology{\n    readonly frontEnd: string[];\n    readonly backEnd: string[];\n    readonly dataScience: string[];\n\n    constructor(\n        frontEnd: string[],\n        backEnd: string[],\n        dataScience:string[]\n    ){\n        this.frontEnd = frontEnd\n        this.backEnd = backEnd;\n        this.dataScience = dataScience;\n    }\n}","resolvedModuleNames":[]}],["C:\\Users\\Usuario\\Desktop\\programacion\\learn_node_typescript\\mentoring\\src\\contexts\\proyects\\proyect\\application\\TechnologyMapper.ts",{"fileContent":"import { TechnologyCommand } from './TechnologyCommand';\nexport class TechnologyMapper {\n    public static  toCommand( frontEnd: string[],  backEnd: string[],  dataScience:string[]):TechnologyCommand{\n        return new TechnologyCommand(frontEnd, backEnd, dataScience);\n    }\n}","resolvedModuleNames":["C:/Users/Usuario/Desktop/programacion/learn_node_typescript/mentoring/src/contexts/proyects/proyect/application/TechnologyCommand.ts"]}],["C:\\Users\\Usuario\\Desktop\\programacion\\learn_node_typescript\\mentoring\\src\\contexts\\proyects\\proyect\\application\\TechnologyCommand.ts",{"fileContent":"export class TechnologyCommand {\n    readonly frontEnd: string[];\n    readonly backEnd: string[];\n    readonly dataScience: string[];\n    constructor( frontEnd:string[],  backEnd: string[],  dataScience:string[]){\n        this.backEnd = backEnd;\n        this.frontEnd = frontEnd;\n        this.dataScience = dataScience;\n    }\n   \n    public  getFrontEnd():string[]{\n        return this.frontEnd;\n    }\n    public getBackend():string[]{\n        return this.backEnd;\n    }\n    public getDataScience():string[]{\n        return this.dataScience;\n    }\n}\n","resolvedModuleNames":[]}]]